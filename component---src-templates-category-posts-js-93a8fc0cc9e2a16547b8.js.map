{"version":3,"file":"component---src-templates-category-posts-js-93a8fc0cc9e2a16547b8.js","mappings":"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","sources":["webpack://dahhong-log/./node_modules/@chakra-ui/layout/dist/chunk-NRJBSIIZ.mjs","webpack://dahhong-log/./src/components/ui/PostCard.jsx","webpack://dahhong-log/./src/templates/category-posts.js","webpack://dahhong-log/./node_modules/@chakra-ui/layout/dist/chunk-2OOHT3W5.mjs","webpack://dahhong-log/./node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs"],"sourcesContent":["'use client'\n\n// src/link-box.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar LinkOverlay = forwardRef(\n  function LinkOverlay2(props, ref) {\n    const { isExternal, target, rel, className, ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.a,\n      {\n        ...rest,\n        ref,\n        className: cx(\"chakra-linkbox__overlay\", className),\n        rel: isExternal ? \"noopener noreferrer\" : rel,\n        target: isExternal ? \"_blank\" : target,\n        __css: {\n          position: \"static\",\n          \"&::before\": {\n            content: \"''\",\n            cursor: \"inherit\",\n            display: \"block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            zIndex: 0,\n            width: \"100%\",\n            height: \"100%\"\n          }\n        }\n      }\n    );\n  }\n);\nvar LinkBox = forwardRef(function LinkBox2(props, ref) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      position: \"relative\",\n      ...rest,\n      className: cx(\"chakra-linkbox\", className),\n      __css: {\n        /* Elevate the links and abbreviations up */\n        \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n          position: \"relative\",\n          zIndex: 1\n        }\n      }\n    }\n  );\n});\n\nexport {\n  LinkOverlay,\n  LinkBox\n};\n//# sourceMappingURL=chunk-NRJBSIIZ.mjs.map","import React from \"react\"\nimport { LinkBox, LinkOverlay, Text, useColorMode } from \"@chakra-ui/react\"\n\nconst PostCard = ({ title, description, date, url }) => {\n  const { colorMode } = useColorMode()\n  let bg\n  let color\n\n  if (colorMode === \"light\") {\n    bg = \"gray.100\"\n    color = \"black\"\n  } else {\n    bg = \"gray.900\"\n    color = \"white\"\n  }\n\n  return (\n    <LinkBox\n      as=\"button\"\n      variant=\"filled\"\n      borderRadius=\"md\"\n      bg={bg}\n      color={color}\n      padding=\"1em\"\n      textAlign=\"left\"\n    >\n      <LinkOverlay href={url}>\n        <Text m=\"0 2\" fontSize=\"lg\">\n          <strong>{title}</strong>\n        </Text>\n        <Text m=\"0 1\">{description}</Text>\n        <Text m=\"0 0\">{date}</Text>\n      </LinkOverlay>\n    </LinkBox>\n  )\n}\n\nexport default PostCard\n","import React from \"react\"\nimport { graphql, Link, navigate } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nimport { IoMdReturnLeft } from \"react-icons/io\"\nimport IconButton from \"../components/ui/IconButton\"\nimport { Box, Text } from \"@chakra-ui/react\"\nimport PostCard from \"../components/ui/PostCard\"\n\nconst CategoryTemplate = ({ location, data, pageContext }) => {\n  const { title, category } = pageContext\n  const posts = data.allMarkdownRemark.edges\n\n  const clickHandler = () => {\n    navigate(-1)\n  }\n\n  return (\n    <Layout location={location} title={title}>\n      <IconButton\n        Icon={<IoMdReturnLeft size=\"1.35em\" />}\n        clickHandler={clickHandler}\n      />\n      <Box mt=\"2em\">\n        <Text fontSize=\"2xl\">‚úçüèº {category}</Text>\n        <ul>\n          {posts.map(({ node }) => (\n            <PostCard\n              key={node.id}\n              url={node.fields.slug}\n              title={node.frontmatter.title}\n              description={node.frontmatter.description}\n              date={node.frontmatter.date}\n            />\n          ))}\n        </ul>\n      </Box>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ($category: String!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { category: { eq: $category } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            description\n            date\n            category\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default CategoryTemplate\n","'use client'\n\n// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n//# sourceMappingURL=chunk-2OOHT3W5.mjs.map","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n"],"names":["LinkOverlay","props","ref","isExternal","target","rel","className","rest","jsx","a","cx","__css","position","content","cursor","display","top","left","zIndex","width","height","LinkBox","div","_ref","title","description","date","url","colorMode","useColorMode","bg","color","React","as","variant","borderRadius","padding","textAlign","href","Text","m","fontSize","location","data","pageContext","category","posts","allMarkdownRemark","edges","Layout","IconButton","Icon","IoMdReturnLeft","size","clickHandler","navigate","Box","mt","map","_ref2","node","PostCard","key","id","fields","slug","frontmatter","styles","align","decoration","casing","aliasedProps","object","clone","Object","assign","compact","textDecoration","textTransform","p","displayName"],"sourceRoot":""}