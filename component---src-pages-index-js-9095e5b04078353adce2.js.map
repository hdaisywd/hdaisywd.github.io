{"version":3,"file":"component---src-pages-index-js-9095e5b04078353adce2.js","mappings":"uIAiDA,IAvCYA,IAAuC,IAADC,EAAAC,EAAAC,EAAA,IAArC,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAUN,EAC3C,MAAM,KAAEO,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApBV,EAAGM,EAAKG,oBAAY,IAAAT,OAAA,EAAjBA,EAAmBI,MAExC,OACEO,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQD,EAAkBN,EAAK,MAAMM,EAAiBN,GACtDO,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASL,IAClCG,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAAST,IACnCO,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASL,IACzCG,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAAQ,YACjCF,EAAAA,cAAA,QACEC,KAAK,iBACLC,SAA0B,QAAjBZ,EAAAK,EAAKG,oBAAY,IAAAR,GAAQ,QAARC,EAAjBD,EAAmBc,cAAM,IAAAb,OAAR,EAAjBA,EAA2Bc,SAAM,KAE5CL,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAST,IACnCO,EAAAA,cAAA,QAAMC,KAAK,qBAAqBC,QAASL,IACxCH,EACA,C,uHCvCHY,GAAc,QAChB,SAAsBC,EAAOC,GAC3B,MAAM,WAAEC,EAAU,OAAEC,EAAM,IAAEC,EAAG,UAAEC,KAAcC,GAASN,EACxD,OAAuB,IAAAO,KACrB,IAAOC,EACP,IACKF,EACHL,MACAI,WAAW,IAAAI,IAAG,0BAA2BJ,GACzCD,IAAKF,EAAa,sBAAwBE,EAC1CD,OAAQD,EAAa,SAAWC,EAChCO,MAAO,CACLC,SAAU,SACV,YAAa,CACXhB,QAAS,KACTiB,OAAQ,UACRC,QAAS,QACTF,SAAU,WACVG,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,OACPC,OAAQ,UAKlB,IAEEC,GAAU,QAAW,SAAkBnB,EAAOC,GAChD,MAAM,UAAEI,KAAcC,GAASN,EAC/B,OAAuB,IAAAO,KACrB,IAAOa,IACP,CACEnB,MACAU,SAAU,cACPL,EACHD,WAAW,IAAAI,IAAG,iBAAkBJ,GAChCK,MAAO,CAEL,qDAAsD,CACpDC,SAAU,WACVK,OAAQ,KAKlB,I,UCXA,MAvCiBnC,IAAwC,IAAvC,MAAEK,EAAK,YAAED,EAAW,KAAEoC,EAAI,IAAEC,GAAKzC,EACjD,MAAM,UAAE0C,IAAcC,EAAAA,EAAAA,MACtB,IAAIC,EACAC,EAUJ,MARkB,UAAdH,GACFE,EAAK,WACLC,EAAQ,UAERD,EAAK,WACLC,EAAQ,SAIRjC,EAAAA,cAAC0B,EAAO,CACNQ,GAAG,SACHC,QAAQ,SACRC,aAAa,KACbJ,GAAIA,EACJC,MAAOA,EACPI,QAAQ,MACRC,UAAU,OACVC,GAAG,MACH3B,UAAU,YACV4B,WAAW,0BACXC,OAAQ,CAAEC,UAAW,eACrBC,OAAQ,CAAEC,QAAS,SAEnB5C,EAAAA,cAACM,EAAW,CAACuC,KAAMhB,GACjB7B,EAAAA,cAAC8C,EAAAA,EAAI,CAACC,EAAE,MAAMC,SAAS,MACrBhD,EAAAA,cAAA,cAASP,IAEXO,EAAAA,cAAC8C,EAAAA,EAAI,CAACC,EAAE,OAAOvD,GACfQ,EAAAA,cAAC8C,EAAAA,EAAI,CAACC,EAAE,OAAOnB,IAET,C,+JCcd,UA3CkBxC,IAAyB,IAAD6D,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAU/D,EACnC,MAAMgE,GAAkC,QAAtBH,EAAAC,EAAKvD,KAAKG,oBAAY,IAAAmD,OAAA,EAAtBA,EAAwBxD,QAAK,QACzC4D,EAAQH,EAAKI,kBAAkBC,MAGrC,OADAC,QAAQC,IAAIN,GACS,IAAjBE,EAAMK,OAEN1D,EAAAA,cAAC2D,EAAAA,EAAM,CAACR,SAAUA,EAAU1D,MAAO2D,GACjCpD,EAAAA,cAAC4D,EAAAA,EAAG,MACJ5D,EAAAA,cAAA,SAAG,yBAMPA,EAAAA,cAAC2D,EAAAA,EAAM,CAACR,SAAUA,EAAU1D,MAAO2D,GACjCpD,EAAAA,cAAA,OAAK6D,MAAO,CAACzC,QAAQ,OAAQ0C,eAAe,aAC1C9D,EAAAA,cAAC+D,EAAAA,GAAG,CAAC7B,GAAG,UACNlC,EAAAA,cAACgE,EAAAA,KAAI,CAACnB,KAAK,eAAc7C,EAAAA,cAAC8C,EAAAA,EAAI,CAACZ,GAAG,KAAI,mBAG1ClC,EAAAA,cAAC8C,EAAAA,EAAI,CAACmB,GAAG,OAAM,cAAYZ,EAAMK,OAAO,KACxC1D,EAAAA,cAAA,MAAI6D,MAAO,CAAEK,UAAU,SACrBlE,EAAAA,cAACmE,EAAAA,EAAK,CAACC,QAAQ,OACZf,EAAMgB,KAAIC,IACT,MAAM7E,EAAQ6E,EAAKC,YAAY9E,OAAS6E,EAAKE,OAAOC,KAEpD,OACEzE,EAAAA,cAAC0E,EAAAA,EAAQ,CACPC,IAAKL,EAAKE,OAAOC,KACjB5C,IAAKyC,EAAKE,OAAOC,KACjBhF,MAAOA,EACPD,YAAa8E,EAAKC,YAAY/E,YAC9BoC,KAAM0C,EAAKC,YAAY3C,MACvB,MAKH,EAWN,MAAMgD,EAAOA,IAAM5E,EAAAA,cAAC6E,EAAAA,EAAG,CAACpF,MAAM,a","sources":["webpack://dahhong-log/./src/components/seo.js","webpack://dahhong-log/./node_modules/@chakra-ui/layout/dist/chunk-NRJBSIIZ.mjs","webpack://dahhong-log/./src/components/ui/PostCard.jsx","webpack://dahhong-log/./src/pages/index.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              github\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"github:card\" content=\"summary\" />\n      <meta\n        name=\"github:creator\"\n        content={site.siteMetadata?.social?.github || ``}\n      />\n      <meta name=\"github:title\" content={title} />\n      <meta name=\"github:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","'use client'\n\n// src/link-box.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar LinkOverlay = forwardRef(\n  function LinkOverlay2(props, ref) {\n    const { isExternal, target, rel, className, ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.a,\n      {\n        ...rest,\n        ref,\n        className: cx(\"chakra-linkbox__overlay\", className),\n        rel: isExternal ? \"noopener noreferrer\" : rel,\n        target: isExternal ? \"_blank\" : target,\n        __css: {\n          position: \"static\",\n          \"&::before\": {\n            content: \"''\",\n            cursor: \"inherit\",\n            display: \"block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            zIndex: 0,\n            width: \"100%\",\n            height: \"100%\"\n          }\n        }\n      }\n    );\n  }\n);\nvar LinkBox = forwardRef(function LinkBox2(props, ref) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      position: \"relative\",\n      ...rest,\n      className: cx(\"chakra-linkbox\", className),\n      __css: {\n        /* Elevate the links and abbreviations up */\n        \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n          position: \"relative\",\n          zIndex: 1\n        }\n      }\n    }\n  );\n});\n\nexport {\n  LinkOverlay,\n  LinkBox\n};\n//# sourceMappingURL=chunk-NRJBSIIZ.mjs.map","import React from \"react\"\nimport { LinkBox, LinkOverlay, Text, useColorMode } from \"@chakra-ui/react\"\n\nconst PostCard = ({ title, description, date, url }) => {\n  const { colorMode } = useColorMode()\n  let bg\n  let color\n\n  if (colorMode === \"light\") {\n    bg = \"gray.100\"\n    color = \"black\"\n  } else {\n    bg = \"gray.900\"\n    color = \"white\"\n  }\n\n  return (\n    <LinkBox\n      as=\"button\"\n      variant=\"filled\"\n      borderRadius=\"md\"\n      bg={bg}\n      color={color}\n      padding=\"1em\"\n      textAlign=\"left\"\n      mb=\"1em\"\n      className=\"post-card\"\n      transition=\"transform 0.2s ease-out\"\n      _hover={{ transform: 'scale(1.02)' }}\n      _focus={{ outline: 'none' }}\n    >\n      <LinkOverlay href={url}>\n        <Text m=\"0 2\" fontSize=\"lg\">\n          <strong>{title}</strong>\n        </Text>\n        <Text m=\"0 1\">{description}</Text>\n        <Text m=\"0 0\">{date}</Text>\n      </LinkOverlay>\n    </LinkBox>\n  )\n}\n\nexport default PostCard\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostCard from \"../components/ui/PostCard\"\nimport { Box, Stack, Text } from \"@chakra-ui/react\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  console.log(location)\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>아직 쓰인 글이 하나도 없습니다 :(</p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <div style={{display:\"flex\", justifyContent:\"flex-end\"}}>\n        <Box as=\"button\">\n          <Link href=\"/guestbook/\"><Text as=\"b\">방명록 쓰러가기 ✍🏻</Text></Link>\n        </Box>\n      </div>\n      <Text mt=\"2em\">All posts ({posts.length})</Text>\n      <ol style={{ listStyle: `none` }}>\n        <Stack spacing=\"1em\">\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <PostCard\n                key={post.fields.slug}\n                url={post.fields.slug}\n                title={title}\n                description={post.frontmatter.description}\n                date={post.frontmatter.date}\n              />\n            )\n          })}\n        </Stack>\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          category\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","social","github","LinkOverlay","props","ref","isExternal","target","rel","className","rest","jsx","a","cx","__css","position","cursor","display","top","left","zIndex","width","height","LinkBox","div","date","url","colorMode","useColorMode","bg","color","as","variant","borderRadius","padding","textAlign","mb","transition","_hover","transform","_focus","outline","href","Text","m","fontSize","_data$site$siteMetada","data","location","siteTitle","posts","allMarkdownRemark","nodes","console","log","length","Layout","Bio","style","justifyContent","Box","Link","mt","listStyle","Stack","spacing","map","post","frontmatter","fields","slug","PostCard","key","Head","Seo"],"sourceRoot":""}