{"version":3,"file":"component---src-templates-blog-post-js-6ce1ab8fbea35a588aca.js","mappings":"uIAA0B,IAEpBA,EAAU,SAAAC,GACd,SAAAD,EAAYE,GAAQ,IAADC,EAIiB,OAHlCA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MAEPG,WAAaC,EAAAA,YAClBH,EAAKI,MAAQ,CAAEC,OAAQ,WAAWL,CACpC,EANcM,EAAAA,EAAAA,GAAAT,EAAAC,GAMb,IAAAS,EAAAV,EAAAW,UAyBA,OAzBAD,EAEDE,kBAAA,WACE,MAAMC,EAAWC,SAASC,cAAc,UACxCF,EAASG,OAAS,IAAMC,KAAKC,SAAS,CAAEV,OAAQ,YAChDK,EAASM,QAAU,IAAMF,KAAKC,SAAS,CAAEV,OAAQ,WACjDK,EAASO,OAAQ,EACjBP,EAASQ,IAAM,gCACfR,EAASS,aAAa,OAAQ,yBAC9BT,EAASS,aAAa,aAAc,SACpCT,EAASS,aAAa,QAAS,gBAC/BT,EAASS,aAAa,cAAe,aACrCL,KAAKZ,WAAWkB,QAAQC,YAAYX,EACtC,EAACH,EAEDe,OAAA,WACE,MAAM,OAAEjB,GAAWS,KAAKV,MAExB,OACED,EAAAA,cAAA,OAAKoB,UAAU,oBACD,WAAXlB,GAAuBF,EAAAA,cAAA,WAAK,4BACjB,YAAXE,GAAwBF,EAAAA,cAAA,WAAK,qBAC9BA,EAAAA,cAAA,OAAKqB,IAAKV,KAAKZ,aAGrB,EAACL,CAAA,CA/Ba,CAASM,EAAAA,WAkCzB,K,qJC3BA,MAkDasB,EAAOC,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQH,EACrD,OACEvB,EAAAA,cAAC2B,EAAAA,EAAG,CACFC,MAAOF,EAAKG,YAAYD,MACxBE,YAAaJ,EAAKG,YAAYC,aAAeJ,EAAKK,SAClD,EAIN,UA3DyBC,IAGlB,IAADC,EAAA,IAFJT,MAAM,SAAEU,EAAQ,KAAEC,EAAI,KAAEC,EAAMX,eAAgBC,GAAM,SACpDW,GACDL,EACC,MAAMM,GAA6B,QAAjBL,EAAAG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBL,QAAK,QAE1C,OACE5B,EAAAA,cAACwC,EAAAA,EAAM,CAACH,SAAUA,EAAUT,MAAOU,GAC/BtC,EAAAA,cAACyC,EAAAA,GAAG,KACFzC,EAAAA,cAAC0C,EAAAA,EAAI,CAACC,SAAS,MAAMC,EAAE,KAAKlB,EAAKG,YAAYD,OAC7C5B,EAAAA,cAAC0C,EAAAA,EAAI,CAACC,SAAS,MAAMjB,EAAKG,YAAYgB,OAExC7C,EAAAA,cAAA,WACE8C,wBAAyB,CAAEC,OAAQrB,EAAKsB,MACxCC,SAAS,gBAEXjD,EAAAA,cAAA,cACEA,EAAAA,cAACkD,EAAAA,EAAG,OAERlD,EAAAA,cAAA,OAAKoB,UAAU,iBACbpB,EAAAA,cAAA,MACEmD,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGXxD,EAAAA,cAAA,UACGkC,GACClC,EAAAA,cAACyD,EAAAA,KAAI,CAACC,GAAIxB,EAASyB,OAAOC,KAAMC,IAAI,QAAO,KACtC3B,EAASL,YAAYD,QAI9B5B,EAAAA,cAAA,UACGmC,GACCnC,EAAAA,cAACyD,EAAAA,KAAI,CAACC,GAAIvB,EAAKwB,OAAOC,KAAMC,IAAI,QAC7B1B,EAAKN,YAAYD,MAAM,SAMlC5B,EAAAA,cAACN,EAAAA,EAAU,MACJ,C","sources":["webpack://dahhong-log/./src/components/comments.js","webpack://dahhong-log/./src/templates/blog-post.js"],"sourcesContent":["import React from 'react';\n\nclass Utterances extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.commentsEl = React.createRef()\n    this.state = { status: 'pending' }\n  }\n\n  componentDidMount() {\n    const scriptEl = document.createElement('script')\n    scriptEl.onload = () => this.setState({ status: 'success' })\n    scriptEl.onerror = () => this.setState({ status: 'failed' })\n    scriptEl.async = true\n    scriptEl.src = 'https://utteranc.es/client.js'\n    scriptEl.setAttribute('repo', \"hdaisywd/blog-comment\")\n    scriptEl.setAttribute('issue-term', 'title')\n    scriptEl.setAttribute('theme', 'github-light')\n    scriptEl.setAttribute('crossorigin', 'anonymous')\n    this.commentsEl.current.appendChild(scriptEl)\n  }\n\n  render() {\n    const { status } = this.state\n\n    return (\n      <div className=\"comments-wrapper\">\n        {status === 'failed' && <div>Error. Please try again.</div>}\n        {status === 'pending' && <div>Loading script...</div>}\n        <div ref={this.commentsEl} />\n      </div>\n    )\n  }\n}\n\nexport default Utterances","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { Box, Text } from \"@chakra-ui/react\"\nimport Utterances from '../components/comments'\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n        <Box>\n          <Text fontSize=\"3xl\" m=\"0\">{post.frontmatter.title}</Text>\n          <Text fontSize=\"sm\">{post.frontmatter.date}</Text>\n        </Box>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <footer>\n          <Bio />\n        </footer>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <Utterances />\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Utterances","_React$Component","props","_this","call","commentsEl","React","state","status","_inheritsLoose","_proto","prototype","componentDidMount","scriptEl","document","createElement","onload","this","setState","onerror","async","src","setAttribute","current","appendChild","render","className","ref","Head","_ref2","data","markdownRemark","post","Seo","title","frontmatter","description","excerpt","_ref","_site$siteMetadata","previous","next","site","location","siteTitle","siteMetadata","Layout","Box","Text","fontSize","m","date","dangerouslySetInnerHTML","__html","html","itemProp","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}