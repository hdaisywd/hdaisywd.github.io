{"version":3,"file":"component---src-templates-blog-post-js-b79bf71731e60c71fe50.js","mappings":"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","sources":["webpack://dahhong-log/./src/components/comments.js","webpack://dahhong-log/./src/components/seo.js","webpack://dahhong-log/./src/templates/blog-post.js"],"sourcesContent":["import { useColorMode } from \"@chakra-ui/react\"\nimport React, { useEffect, useState } from \"react\"\n\nconst Comments = () => {\n  const { colorMode, toggleColorMode } = useColorMode()\n  const [theme, setTheme] = useState(colorMode)\n\n  useEffect(() => {\n    if (colorMode === \"light\") {\n      setTheme(\"light\")\n    } else {\n      setTheme(\"dark\")\n    }\n  }, [colorMode])\n\n  useEffect(() => {\n    const script = document.createElement(\"script\")\n    script.src = \"https://giscus.app/client.js\"\n    script.async = true\n    script.setAttribute(\"data-repo\", \"hdaisywd/blog-comment\")\n    script.setAttribute(\"data-repo-id\", \"R_kgDOMJBGpg\")\n    script.setAttribute(\"data-category\", \"General\")\n    script.setAttribute(\"data-category-id\", \"DIC_kwDOMJBGps4CgEX7\")\n    script.setAttribute(\"data-mapping\", \"pathname\")\n    script.setAttribute(\"data-reactions-enabled\", \"1\")\n    script.setAttribute(\"data-emit-metadata\", \"0\")\n    script.setAttribute(\"data-input-position\", \"top\")\n    script.setAttribute(\"data-theme\", theme)\n    script.setAttribute(\"data-lang\", \"ko\")\n    script.crossOrigin = \"anonymous\"\n    document.getElementById(\"giscus-container\").appendChild(script)\n  }, [theme])\n\n  return <div id=\"giscus-container\" />\n}\n\nexport default Comments\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              github\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"github:card\" content=\"summary\" />\n      <meta\n        name=\"github:creator\"\n        content={site.siteMetadata?.social?.github || ``}\n      />\n      <meta name=\"github:title\" content={title} />\n      <meta name=\"github:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { Box, Text } from \"@chakra-ui/react\"\nimport Comments from \"../components/comments\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Box>\n        <Text fontSize=\"3xl\" m=\"0\">\n          {post.frontmatter.title}\n        </Text>\n        <Text fontSize=\"sm\">{post.frontmatter.date}</Text>\n      </Box>\n      <section\n        dangerouslySetInnerHTML={{ __html: post.html }}\n        itemProp=\"articleBody\"\n      />\n      <footer>\n        <Bio />\n      </footer>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <Comments />\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Comments","colorMode","toggleColorMode","useColorMode","theme","setTheme","useState","useEffect","script","document","createElement","src","async","setAttribute","crossOrigin","getElementById","appendChild","React","id","_ref","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","github","Head","_ref2","data","markdownRemark","post","Seo","frontmatter","excerpt","previous","next","location","siteTitle","Layout","Box","Text","fontSize","m","date","dangerouslySetInnerHTML","__html","html","itemProp","Bio","className","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}