{"version":3,"file":"component---src-pages-index-js-3966bece6084518befb0.js","mappings":"+MAMIA,GAAc,QAChB,SAAsBC,EAAOC,GAC3B,MAAM,WAAEC,EAAU,OAAEC,EAAM,IAAEC,EAAG,UAAEC,KAAcC,GAASN,EACxD,OAAuB,IAAAO,KACrB,IAAOC,EACP,IACKF,EACHL,MACAI,WAAW,IAAAI,IAAG,0BAA2BJ,GACzCD,IAAKF,EAAa,sBAAwBE,EAC1CD,OAAQD,EAAa,SAAWC,EAChCO,MAAO,CACLC,SAAU,SACV,YAAa,CACXC,QAAS,KACTC,OAAQ,UACRC,QAAS,QACTH,SAAU,WACVI,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,OACPC,OAAQ,UAKlB,IAEEC,GAAU,QAAW,SAAkBpB,EAAOC,GAChD,MAAM,UAAEI,KAAcC,GAASN,EAC/B,OAAuB,IAAAO,KACrB,IAAOc,IACP,CACEpB,MACAU,SAAU,cACPL,EACHD,WAAW,IAAAI,IAAG,iBAAkBJ,GAChCK,MAAO,CAEL,qDAAsD,CACpDC,SAAU,WACVM,OAAQ,KAKlB,I,UChBA,MAlCiBK,IAAwC,IAAvC,MAAEC,EAAK,YAAEC,EAAW,KAAEC,EAAI,IAAEC,GAAKJ,EACjD,MAAM,UAAEK,IAAcC,EAAAA,EAAAA,MACtB,IAAIC,EACAC,EAUJ,MARkB,UAAdH,GACFE,EAAK,WACLC,EAAQ,UAERD,EAAK,WACLC,EAAQ,SAIRC,EAAAA,cAACX,EAAO,CACNY,GAAG,SACHC,QAAQ,SACRC,aAAa,KACbL,GAAIA,EACJC,MAAOA,EACPK,QAAQ,MACRC,UAAU,QAEVL,EAAAA,cAAChC,EAAW,CAACsC,KAAMX,GACjBK,EAAAA,cAACO,EAAAA,EAAI,CAACC,EAAE,MAAMC,SAAS,MACrBT,EAAAA,cAAA,cAASR,IAEXQ,EAAAA,cAACO,EAAAA,EAAI,CAACC,EAAE,OAAOf,GACfO,EAAAA,cAACO,EAAAA,EAAI,CAACC,EAAE,OAAOd,IAET,C,2ICcd,UAtCkBH,IAAyB,IAADmB,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAUrB,EACnC,MAAMsB,GAAkC,QAAtBH,EAAAC,EAAKG,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBlB,QAAK,QACzCwB,EAAQL,EAAKM,kBAAkBC,MAGrC,OADAC,QAAQC,IAAIR,GACS,IAAjBI,EAAMK,OAENrB,EAAAA,cAACsB,EAAAA,EAAM,CAACV,SAAUA,EAAUpB,MAAOqB,GACjCb,EAAAA,cAACuB,EAAAA,EAAG,MACJvB,EAAAA,cAAA,SAAG,yBAMPA,EAAAA,cAACsB,EAAAA,EAAM,CAACV,SAAUA,EAAUpB,MAAOqB,GAEjCb,EAAAA,cAAA,MAAIwB,MAAO,CAAEC,UAAU,SACrBzB,EAAAA,cAAC0B,EAAAA,EAAK,CAACC,QAAQ,OACZX,EAAMY,KAAIC,IACT,MAAMrC,EAAQqC,EAAKC,YAAYtC,OAASqC,EAAKE,OAAOC,KAEpD,OACEhC,EAAAA,cAACiC,EAAAA,EAAQ,CACPC,IAAKL,EAAKE,OAAOC,KACjBrC,IAAKkC,EAAKE,OAAOC,KACjBxC,MAAOA,EACPC,YAAaoC,EAAKC,YAAYrC,YAC9BC,KAAMmC,EAAKC,YAAYpC,MACvB,MAKH,EAWN,MAAMyC,EAAOA,IAAMnC,EAAAA,cAACoC,EAAAA,EAAG,CAAC5C,MAAM,a","sources":["webpack://dahhong-log/./node_modules/@chakra-ui/layout/dist/chunk-NRJBSIIZ.mjs","webpack://dahhong-log/./src/components/ui/PostCard.jsx","webpack://dahhong-log/./src/pages/index.js"],"sourcesContent":["'use client'\n\n// src/link-box.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar LinkOverlay = forwardRef(\n  function LinkOverlay2(props, ref) {\n    const { isExternal, target, rel, className, ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.a,\n      {\n        ...rest,\n        ref,\n        className: cx(\"chakra-linkbox__overlay\", className),\n        rel: isExternal ? \"noopener noreferrer\" : rel,\n        target: isExternal ? \"_blank\" : target,\n        __css: {\n          position: \"static\",\n          \"&::before\": {\n            content: \"''\",\n            cursor: \"inherit\",\n            display: \"block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            zIndex: 0,\n            width: \"100%\",\n            height: \"100%\"\n          }\n        }\n      }\n    );\n  }\n);\nvar LinkBox = forwardRef(function LinkBox2(props, ref) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      position: \"relative\",\n      ...rest,\n      className: cx(\"chakra-linkbox\", className),\n      __css: {\n        /* Elevate the links and abbreviations up */\n        \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n          position: \"relative\",\n          zIndex: 1\n        }\n      }\n    }\n  );\n});\n\nexport {\n  LinkOverlay,\n  LinkBox\n};\n//# sourceMappingURL=chunk-NRJBSIIZ.mjs.map","import React from \"react\"\nimport { LinkBox, LinkOverlay, Text, useColorMode } from \"@chakra-ui/react\"\n\nconst PostCard = ({ title, description, date, url }) => {\n  const { colorMode } = useColorMode()\n  let bg\n  let color\n\n  if (colorMode === \"light\") {\n    bg = \"gray.100\"\n    color = \"black\"\n  } else {\n    bg = \"gray.900\"\n    color = \"white\"\n  }\n\n  return (\n    <LinkBox\n      as=\"button\"\n      variant=\"filled\"\n      borderRadius=\"md\"\n      bg={bg}\n      color={color}\n      padding=\"1em\"\n      textAlign=\"left\"\n    >\n      <LinkOverlay href={url}>\n        <Text m=\"0 2\" fontSize=\"lg\">\n          <strong>{title}</strong>\n        </Text>\n        <Text m=\"0 1\">{description}</Text>\n        <Text m=\"0 0\">{date}</Text>\n      </LinkOverlay>\n    </LinkBox>\n  )\n}\n\nexport default PostCard\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostCard from \"../components/ui/PostCard\"\nimport { Stack } from \"@chakra-ui/react\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  console.log(location)\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>아직 쓰인 글이 하나도 없습니다 :(</p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      \n      <ol style={{ listStyle: `none` }}>\n        <Stack spacing='1em'>\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <PostCard\n                key={post.fields.slug}\n                url={post.fields.slug}\n                title={title}\n                description={post.frontmatter.description}\n                date={post.frontmatter.date}\n              />\n            )\n          })}\n        </Stack>\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          category\n        }\n      }\n    }\n  }\n`\n"],"names":["LinkOverlay","props","ref","isExternal","target","rel","className","rest","jsx","a","cx","__css","position","content","cursor","display","top","left","zIndex","width","height","LinkBox","div","_ref","title","description","date","url","colorMode","useColorMode","bg","color","React","as","variant","borderRadius","padding","textAlign","href","Text","m","fontSize","_data$site$siteMetada","data","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","console","log","length","Layout","Bio","style","listStyle","Stack","spacing","map","post","frontmatter","fields","slug","PostCard","key","Head","Seo"],"sourceRoot":""}