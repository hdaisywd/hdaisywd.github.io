{"componentChunkName":"component---src-templates-blog-post-js","path":"/chakra_darkmode/","result":{"data":{"site":{"siteMetadata":{"title":"🥷🏻 Dahhong"}},"markdownRemark":{"id":"1a596430-776d-5136-9c95-9594ecb8cbd9","excerpt":"안녕하세요. 오늘은 차크라로 다크모드를 설정하는 법에 대해 알아보겠습니다.  사실 30초는 뻥이구요.. 그래도 Chakra UI는 다크모드 설정이 가능한 빌트인 기능 ColorMode가 있어서 굉장히 빨리 구현이 가능 합니다. ㅎㅅㅎ Gatsby…","html":"<p>안녕하세요. 오늘은 차크라로 다크모드를 설정하는 법에 대해 알아보겠습니다.</p>\n<p><img src=\"https://i.imgur.com/LnzMPM8.png\" alt=\"\"></p>\n<p>사실 30초는 뻥이구요.. 그래도 Chakra UI는 다크모드 설정이 가능한 빌트인 기능 ColorMode가 있어서 굉장히 빨리 구현이 가능 합니다. ㅎㅅㅎ</p>\n<h4>Gatsby에 차크라 설치하기</h4>\n<p><a href=\"https://v2.chakra-ui.com/getting-started/gatsby-guide\">공식 문서</a> 링크에 들어가서 그대로 따라해주시면 됩니다. 저는 gatsby-starter-blog 테마를 사용하고 있는데요.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby-browser.js</code></pre></div>\n<p>이 파일을 건드려주면 됩니다.</p>\n<p><strong>gatsby-browser.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ChakraProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@chakra-ui/react\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> customTheme <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./src/theme\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">wrapRootElement</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> element <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>ChakraProvider theme<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>customTheme<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>element<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ChakraProvider<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이렇게.. 하란대로 해주었습니다.</p>\n<p>그런데 <code>wrapRootElement</code>란 무엇일까요?<br>\n👉 <a href=\"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-browser/#wrapRootElement\">문서</a>를 찾아보니 정체는 Gatsby에서 제공하는 API였습니다. 어플리케이션의 전체를 감싸 context를 전달 할 때 쓰일 수 있다고 합니다. 그것도 모르고 .. 어딜 감싸주라는거야.. 하고 고민했습니다. 쩝. 아직 한참 먼 나.</p>\n<h4>Theme Config 커스텀 하기</h4>\n<p>먼저 Chakra의 defaultTheme을 커스텀을 해줍니다. 고려해야 할 옵션은 2가지 입니다.</p>\n<ul>\n<li><code>initialColorMode</code>: 유저가 사이트에 처음 접속했을 때의 모드를 정해줍니다. <code>dark</code>, <code>light</code>, <code>system</code> 중에 하나를 골라서 넘겨주면 됩니다.</li>\n<li><code>useSystemColorMode</code> : <code>boolean</code> 값을 넘겨주면 됩니다. <code>true</code> 일 시 차크라는 사용자의 시스템 모드를 상시 확인하여 반응을 하게 됩니다.</li>\n</ul>\n<p><strong>theme.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> extendTheme <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@chakra-ui/react\"</span>\n\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">initialColorMode</span><span class=\"token operator\">:</span> <span class=\"token string\">\"system\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">useSystemColorMode</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> theme <span class=\"token operator\">=</span> <span class=\"token function\">extendTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> config <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> theme</code></pre></div>\n<p>저는 첫 시작은 사용자의 시스템을 따라가고, 그 후부턴 차크라가 더이상 사용자 시스템 모드를 추적하지 않도록 해두었습니다.</p>\n<h4>ColorModeScript 추가해주기</h4>\n<p>다시 <code>gatsby-browser.js</code>로 돌아가서 스크립트를</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>ColorModeScript initialColorMode<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>initialColorMode<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>호호호 그럼 이제 절반은 왔습니다. 이제 <code>toggle</code> 기능을 구현해봅시다.</p>\n<h4>useColorMode 훅 사용하기</h4>\n<p>차크라에서는 현재 ColorMode 값과 토글 기능을 제공하는 훅을 제공하고 있습니다.</p>\n<p><img src=\"https://i.imgur.com/TtNadzH.png\" alt=\"\"></p>\n<ol>\n<li>훅을 사용하여 <code>colorMode</code>로 현재 ColorMode, 그리고 <code>toggleColorMode</code>로 토글 함수를 가져옵니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> colorMode<span class=\"token punctuation\">,</span> toggleColorMode <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useColorMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"2\">\n<li><code>toggleColorMode</code>을 onClick에 넘겨줍니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleColorMode<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  Toggle <span class=\"token punctuation\">{</span>colorMode <span class=\"token operator\">===</span> <span class=\"token string\">\"light\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"Dark\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Light\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span></code></pre></div>\n<p>두 코드를 아무데나 붙여 넣어서 확인해봅시다. 저는 아이콘도 추가하고.. 조금 꾸며줬습니다. 아무튼!\n<img src=\"https://i.imgur.com/u2OFPLk.png\" alt=\"\">\n<img src=\"https://i.imgur.com/Ka5VVM8.png\" alt=\"\">\n헉!!!!!!!!!!!!!</p>\n<p><img src=\"https://i.imgur.com/vsytmhj.png\" alt=\"\"></p>\n<p>이정도면 30초 아닐까요? 하하.<br>\n이렇게 다크모드 구현을 완료했습니다. 세세한 스타일은 <code>theme.js</code>를 통해 구현해주면 될 것 같군요.</p>","frontmatter":{"title":"☯ Chakra UI로 Gatsby에 다크모드 30초만에 적용하기","date":"July 20, 2024","description":"안녕하세요? 차크라를 이용해서 갯츠비 블로그에 다크모드를 적용시켜 봅시다. 모두 소등 블로그 샷다 내려."}},"previous":null,"next":null},"pageContext":{"id":"1a596430-776d-5136-9c95-9594ecb8cbd9","previousPostId":null,"nextPostId":null}},"staticQueryHashes":["230163734","2684057618","3589320610"],"slicesMap":{}}